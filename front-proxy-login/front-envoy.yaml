admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901

static_resources:
  secrets:
    - name: token
      generic_secret:
        secret:
          inline_string: <Your client secret here>
    - name: hmac
      generic_secret:
        secret:
          inline_string: <Your hmac secret here>
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8081
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          http_filters:
            - name: envoy.filters.http.oauth2
              typed_config:
                '@type': type.googleapis.com/envoy.extensions.filters.http.oauth2.v3.OAuth2
                config:
                  token_endpoint:
                    cluster: oauth
                    uri: <Your amazon cognito userpools domain here>/oauth2/token
                    timeout: 10s
                  authorization_endpoint: <Your amazon cognito userpools domain here>/login
                  credentials:
                    client_id: <Your client id here>
                    token_secret:
                      name: token
                    hmac_secret:
                      name: hmac
                  redirect_uri: "%REQ(x-forwarded-proto)%://%REQ(:authority)%/callback"
                  redirect_path_matcher:
                    path:
                      exact: /callback
                  signout_path:
                    path:
                      exact: /signout
                  forward_bearer_token: true
                  auth_scopes:
                    - openid
                    - email
            - name: envoy.filters.http.lua
              typed_config:
                '@type': type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                default_source_code:
                  inline_string: |
                    function envoy_on_request(request_handle)
                      headers = request_handle:headers()
                      headers:remove("authorization")
                      path = headers:get(":path"):gsub("/$", "/index.html")
                      headers:replace(":path", path)
                    end
            - name: envoy.filters.http.aws_request_signing
              typed_config:
                '@type': type.googleapis.com/envoy.extensions.filters.http.aws_request_signing.v3.AwsRequestSigning
                service_name: s3
                region: <Your s3 bucket region here>
                use_unsigned_payload: true
                host_rewrite: <Your s3 bucket name here>.s3.<Your s3 bucket region here>.amazonaws.com
            - name: envoy.filters.http.router
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          codec_type: AUTO
          stat_prefix: ingress_http
          route_config:
            name: s3_route
            virtual_hosts:
            - name: static_web
              domains:
              - '*'
              routes:
              - match:
                  prefix: /
                route:
                  cluster: s3
  clusters:
  - name: oauth
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: oauth
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: <Your amazon cognito userpools domain here>
                    port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: <Your amazon cognito userpools domain here>
  - name: s3
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: s3
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: <Your s3 bucket name here>.s3.<Your s3 bucket region here>.amazonaws.com
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: <Your s3 bucket name here>.s3.<Your s3 bucket region here>.amazonaws.com
